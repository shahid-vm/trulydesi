{% if section.blocks.size > 0 %}
<div class="timeline-{{ section.id }} section-{{ section.id }}-padding color-{{ section.settings.color_scheme }}">
    <h2 class="section-title">{{ section.settings.title }}</h2>
    <div class="sub-title">{{ section.settings.coll-desc }}</div>
  <div class="timeline">
    <span class="timeline-line"></span>
    {% for block in section.blocks %}
    {% assign count = forloop.index | modulo:2 %}
    {% if count != 0 %}
      <div class="timeline-item left">
        <div class="timeline-content">
          <h3>{{ block.settings.year }}</h3>
          <p>{{ block.settings.discription }}</p>
        </div>
      </div>
    {% else %}
      <div class="timeline-item right">
        <div class="timeline-content">
          <h3>{{ block.settings.year }}</h3>
          <p>{{ block.settings.discription }}</p>
        </div>
      </div>
    {% endif %}
    {% endfor %}
  </div>
</div>
{% endif %}
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll(".timeline-item");
    const line = document.querySelector('.timeline-line');
    const timelineSection = document.querySelector('.timeline');
  
    window.addEventListener('scroll', () => {
      const sectionTop = timelineSection.offsetTop;
      const sectionHeight = timelineSection.offsetHeight;
      const scrollTop = window.scrollY;
      const windowHeight = window.innerHeight;
  
      // Scroll position relative to the timeline section
      const distanceScrolledInSection = scrollTop + windowHeight - sectionTop;
  
      // Clamp the value between 0 and sectionHeight
      const clampedHeight = Math.min(Math.max(distanceScrolledInSection, 0), sectionHeight);
  
      // Set the height of the line
      line.style.height = `${clampedHeight}px`;
    });

    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.2 }
    );

    items.forEach(item => observer.observe(item));
  });
</script>
{% schema %}
{
    "name": "Timeline Section",
    "settings": [
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "background-1"
      },
      {
        "type": "text",
        "id": "title",
        "label": "Heading"
      },
      {
        "type": "richtext",
        "id": "coll-desc",
        "label": "Description"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ],
    "blocks": [
      {
        "name": "Block",
        "type": "Block",
        "settings": [
          {
            "type": "text",
            "id": "year",
            "label": "Year"
          }, 
          {
           "type": "text",
            "id": "title",
            "label": "Title"
          },
          {
            "type": "textarea",
            "id": "discription",
            "label": "Content"
          } 
        ]
      }
    ],
    "presets": [
      {
        "name": "Timeline Section"

      }
    ]
  }
{% endschema %}
<style>
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }
   .timeline-{{ section.id }} .jiddo-journey {
      padding: 80px 20px;
      position: relative;
    }

.timeline-{{ section.id }} .section-title {
    color: #064f32;
    font-size: 28px;
    font-weight: bold;
    text-align: center;
    margin: 0px 0px 40px 0px;
}
.timeline-{{ section.id }} .sub-title {
    max-width: 800px;
    font-size: 16px;
    color: #555;
    justify-items: anchor-center;
}

.timeline-{{ section.id }} .timeline {
  position: relative;
  margin: 0 auto;
  padding: 20px 0;
  max-width: 900px;
}

.timeline-{{ section.id }} .timeline::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 50%;
  width: 2px;
  background: #ddd;
  transform: translateX(-50%);
}
.timeline-line {
  position: absolute;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
  width: 3px;
  height: 0;
  background-color: #074514;
  border-radius: 50px;
  transition: height 1s ease-out;
}

.timeline-{{ section.id }} .timeline-item {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 80px;
  position: relative;
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s ease;
}

.timeline-{{ section.id }} .timeline-item.visible {
  opacity: 1;
  transform: translateY(0);
}

.timeline-{{ section.id }} .timeline-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  width: 16px;
  height: 16px;
  background: #074514;
  border-radius: 50%;
  transform: translateX(-50%);
  z-index: 2;
}

.timeline-{{ section.id }} .timeline-item.left {
  flex-direction: row-reverse;
}

.timeline-{{ section.id }} .timeline-item.right {
  flex-direction: row;
}

.timeline-{{ section.id }} .timeline-content {
  width: 45%;
  background: white;
  padding: 20px;
  border-radius: 8px;
  text-align: left;
}

.timeline-{{ section.id }} .timeline-content h3 {
  margin-top: 0;
  font-size: 1.8rem;
  font-weight: bold;
  color: #1c0f0a;
}

.timeline-{{ section.id }} .timeline-content p {
  font-size: 1.1rem;
  line-height: 1.6;
  color: #333;
}

@media screen and (max-width: 768px) {
  .timeline-{{ section.id }} .timeline::before {
    left: 20px;
  }
  .timeline-{{ section.id }} .timeline-item,
  .timeline-{{ section.id }} .timeline-item.left,
  .timeline-{{ section.id }} .timeline-item.right {
    flex-direction: column;
    align-items: flex-start;
  }
  .timeline-{{ section.id }} .timeline-item::before {
    left: 20px;
    transform: none;
  }
  .timeline-{{ section.id }} .timeline-content {
    width: 100%;
    margin-left: 40px;
  }
}
@media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
  }
</style>